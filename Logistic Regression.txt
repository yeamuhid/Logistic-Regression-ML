# Importing the necessary libraries
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

# Sample dataset (for illustration purposes)
# You can replace this with your own dataset
data = {
    'Age': [22, 25, 47, 52, 46, 56, 56, 57, 36, 28],
    'Salary': [15000, 29000, 60000, 43000, 41000, 80000, 82000, 87000, 52000, 42000],
    'Purchased': [0, 0, 1, 1, 1, 1, 1, 1, 0, 0]
}

# Converting the dataset to a pandas DataFrame
df = pd.DataFrame(data)

# Features and target variable
X = df[['Age', 'Salary']]  # Independent variables (features)
y = df['Purchased']  # Dependent variable (target)

# Splitting the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Initializing the Logistic Regression model
model = LogisticRegression()

# Training the model
model.fit(X_train, y_train)

# Making predictions on the test set
y_pred = model.predict(X_test)

# Evaluating the model
accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
class_report = classification_report(y_test, y_pred)

# Displaying the results
print(f"Accuracy: {accuracy:.2f}")
print("Confusion Matrix:")
print(conf_matrix)
print("Classification Report:")
print(class_report)
